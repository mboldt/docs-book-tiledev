---
title: Scope, MVP, and Validation
owner: Services
---

## Step 1. Design the integration

With sufficient understanding of both your product, and Cloud Foundry concepts,
you are in a position to decide what the integration looks like. Integration
points might include:

- [Service Brokers](cf-concepts.md#service-brokers)
- [Managed Services](stages.md#managed)
- [Buildpacks](cf-concepts.md#buildpacks)
- [Embedded Agents](cf-concepts.md#agents)
- [Nozzles](cf-concepts.md#nozzles)
- Or any combination of the above

If you are not intimately familiar with Cloud Foundry, this is one of the
areas where we can help. We like to do scoping meetings with you, where
we pair your understanding of your products, with our understanding of
Cloud Foundry, to map out the best possible integration path.

## Step 2. Learn how to build

Depending on the selected type of integration, you will need to learn
how to build one or more of:

- [Service brokers](service-brokers.md)
- [Managed services](managed-services.md)
- [Dynamic services](dynamic-services.md)
- [Buildpacks](buildpacks.md)
- [Embedded agents](embedded-agents.md)
- [Nozzles](nozzles.md)

Self-learning is definitely possible. If you are interested in more
organized learning, Pivotal provides many different classes and labs for
partners and customers. [Contact us](contacts.md)
if your are interested in learning more about this.

## Step 3. Set up a test environment

Once you move into development, you will need access to a PCF environment.
Partners who participate in our program have access to a number of shared
environments that are operated and managed by Pivotal. If you are not (yet)
in our program, need a dedicated environment, or want to be able to work
offline, you can set up a PCF environment on:

- [Developer desktop/laptop](setup-pcfdev.md)
- [Supported public or private infrastructure (IaaS)](setup-pcf.md#setup)

You will then also need to learn to operate and upgrade PCF by yourself:

- [Operating a PCF environment](setup-pcf.md#operations)
- [Upgrading a PCF environment](setup-pcf.md#upgrade)

## Step 4. Validate the design

Pivotal is a strong believer in lean and agile development and the notion
of delivering a Minimal Viable Product (MVP) to our customers as quickly
as possible. So we always look for [staged approaches](stages.md) to
the development of the integration, and only plan the upcoming stage in
great detail.

In most cases, there is a very rapid way to do a proof-of-concept of the
proposed integration. For instance, if you are building a service, you
can often emulate the availability of a brokered, managed, or dynamic
service by setting up a [user-provided service](stages.md#ups)
for an existing instance of your service. That will let you validate
the integration design before you make a large development investment,
and it will let real consumers weigh in on development priorities.

A critical component to this step is the development of consuming
applications. Those can be real customer applications, or test applications
that are deployed to PCF.

- [Developing applications](cf-concepts.md#applications)
- [Binding services](cf-concepts.md#services)

